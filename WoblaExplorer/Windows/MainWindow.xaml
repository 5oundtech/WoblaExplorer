<Window x:Class="WoblaExplorer.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
        xmlns:local="clr-namespace:WoblaExplorer.CustomCommands"
        xmlns:util="clr-namespace:WoblaExplorer.Util"
        xmlns:converters="clr-namespace:WoblaExplorer.Converters"
        xmlns:io="clr-namespace:System.IO;assembly=mscorlib"
        Title="WoblaExplorer" Height="350" Width="525" Name="MainWindowX">
    <Window.CommandBindings>
        <CommandBinding Command="Backspace" Executed="BackspaceExecuted" CanExecute="DefaultCommands_CanExecute"/>
        <CommandBinding Command="Open" Executed="OpenCommandExecuted" CanExecute="DefaultCommands_CanExecute"/>
        <CommandBinding Command="local:Commands.ShowInExplorer" Executed="ShowInExplorerExecuted" CanExecute="DefaultCommands_CanExecute"/>
        <CommandBinding Command="local:Commands.Rename" Executed="RenameExecuted" CanExecute="DefaultCommands_CanExecute"/>
        <CommandBinding Command="local:Commands.CopyTo" Executed="CopyToExecuted" CanExecute="DefaultCommands_CanExecute"/>
        <CommandBinding Command="local:Commands.Remove" Executed="RemoveExecuted" CanExecute="DefaultCommands_CanExecute"/>
        <CommandBinding Command="local:Commands.Exit" Executed="ExitExecuted" CanExecute="DefaultCommands_CanExecute"/>
        <CommandBinding Command="local:Commands.AboutDialog" Executed="AboutDialogExecuted" CanExecute="DefaultCommands_CanExecute"/>
        <CommandBinding Command="local:Commands.PropertiesDialog" Executed="PropertiesDialogExecuted" CanExecute="DefaultCommands_CanExecute"/>
        <CommandBinding Command="local:Commands.ReRunAsAdministrator" Executed="ReRunAsAdministratorExecuted" CanExecute="DefaultCommands_CanExecute"/>
        <CommandBinding Command="local:Commands.CreateDirectory" Executed="CreateDirectoryExecuted" CanExecute="DefaultCommands_CanExecute"/>
        <CommandBinding Command="local:Commands.CheckForUpdates" Executed="CheckForUpdatesExecuted" CanExecute="DefaultCommands_CanExecute"/>
        <CommandBinding Command="local:Commands.ModifySelection" Executed="ModifySelectionExecuted" CanExecute="DefaultCommands_CanExecute"/>
    </Window.CommandBindings>
    
    <Window.Resources>
        <LinearGradientBrush x:Key="ActiveBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="{StaticResource Fill_active_top}" Offset="0.31" />
            <GradientStop Color="{StaticResource Fill_active_bottom}" Offset="1" />
        </LinearGradientBrush>
        <util:FileNameToIconConverter x:Key="FileNameToIconConverter"></util:FileNameToIconConverter>
        <converters:FileLengthToNormalConverter x:Key="FileLengthConverter"></converters:FileLengthToNormalConverter>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition MaxHeight="25"></RowDefinition>
            <RowDefinition MaxHeight="30"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="20"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Menu>
                <MenuItem Header="{DynamicResource MwFileConMehuHeader}" FontFamily="{StaticResource FontAwesome}" >
                    <MenuItem Header="{DynamicResource MwFileConMenuRunAsAdmin}" Command="local:Commands.ReRunAsAdministrator"></MenuItem>
                    <MenuItem Header="{DynamicResource MwFileConMenuLanguage}" x:Name="LanguageMenu"></MenuItem>
                    <MenuItem Header="{DynamicResource MwFileConMenuExit}" Command="local:Commands.Exit"></MenuItem>
                </MenuItem>
                <MenuItem Header="{DynamicResource MwFileConMenuEdit}" FontFamily="{StaticResource FontAwesome}">
                    <MenuItem Header="{DynamicResource MwFileConMenuEditSelectAll}" Command="local:Commands.ModifySelection" CommandParameter="SelectAll"/>
                    <MenuItem Header="{DynamicResource MwFileConMenuEditInvertSelection}" Command="local:Commands.ModifySelection" CommandParameter="Invert"/>
                </MenuItem>
                <MenuItem Header="{DynamicResource MwHelpConMenuHeader}" FontFamily="{StaticResource FontAwesome}" >
                    <MenuItem Header="{DynamicResource MwHelpConMenuUpdates}" Command="local:Commands.CheckForUpdates"></MenuItem>
                    <MenuItem Header="{DynamicResource MwHelpConMenuAbout}" Command="local:Commands.AboutDialog"></MenuItem>
                </MenuItem>
            </Menu>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0">
                <ComboBox DockPanel.Dock="Left" Name="CbDrives" Width="60" SelectionChanged="CbDrives_OnSelectionChanged" Height="25" DropDownOpened="CbDrives_OnDropDownOpened"></ComboBox>
                <Button DockPanel.Dock="Right" Name="BtnDiveBack" Command="Backspace" Width="60" Margin="30, 0, 0, 0" Height="25" FontFamily="{StaticResource FontAwesome}" Content="{DynamicResource MwBtnDiveBack}"></Button>
            </DockPanel>
            <TextBox Grid.Column="1" Grid.Row="0" Margin="20, 0, 0, 0" Name="TbSearchInput" Text="{DynamicResource MwTbSearchInputText}"
                     ToolTip="{DynamicResource MwTbSearchInputTooltip}" Width="Auto" AutoWordSelection="True" Height="25" KeyUp="TbSearchInput_OnKeyUp">
            </TextBox>
            <Button Grid.Column="2" Grid.Row="0" Name="BtnSearch" Width="70" Margin="10, 0, 0, 0" Click="BtnSearch_OnClick" Height="25" FontFamily="{StaticResource FontAwesome}" Content="{DynamicResource MwBtnSearch}"></Button>
        </Grid>

        <Grid Grid.Row="2">
            <ListView HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Name="ListViewExplorer"
                      MouseDoubleClick="ListViewExplorer_OnMouseDoubleClick" Focusable="True" DataContext="{x:Type io:FileSystemInfo}"
                      >
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border Name="Selection"  BorderBrush="Transparent" BorderThickness="1">
                                        <StackPanel Orientation="Horizontal" Visibility="Visible">
                                            <TextBlock FontFamily="{StaticResource FontAwesome}" FontSize="20" Foreground="Gray" Margin="0, 0, 10, 0" 
                                                        Text="{Binding Path=FullName, Converter={StaticResource FileNameToIconConverter}}" VerticalAlignment="Center"/>
                                            <ContentPresenter >
                                                <ContentPresenter.ContentTemplate>
                                                    <DataTemplate>
                                                        <TextBlock FontSize="20" Text="{Binding}"></TextBlock>
                                                    </DataTemplate>
                                                </ContentPresenter.ContentTemplate>
                                            </ContentPresenter>
                                        </StackPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Selection" Property="Background" Value="{StaticResource ActiveBrush}"></Setter>
                                            <Setter TargetName="Selection" Property="Visibility" Value="Visible"></Setter>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Selection" Property="Background" Value="{StaticResource ActiveBrush}"></Setter>
                                            <Setter TargetName="Selection" Property="Visibility" Value="Visible"></Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="ToolTip">
                                    <Setter.Value>
                                        <ToolTip>
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock >
                                            <Run Text="{DynamicResource MwMainLvTooltipType}"></Run>
                                            <Run Text="{Binding Path=Extension, Mode=OneWay}"></Run>
                                                </TextBlock>
                                                <TextBlock>
                                            <Run Text="{DynamicResource MwMainLvTooltipSize}"/>
                                            <Run Text="{Binding Path=Length, Mode=OneWay, Converter={StaticResource FileLengthConverter}}"/>
                                                </TextBlock>
                                                <TextBlock>
                                            <Run Text="{DynamicResource MwMainLvtooltipChangeDate}"/>
                                            <Run Text="{Binding Path=LastWriteTime, Mode=OneWay, StringFormat={x:Static util:Constants.DateTimeFormat}}"/>
                                                </TextBlock>
                                            </StackPanel>
                                        </ToolTip>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.InputBindings>
                    <KeyBinding Command="Open" Key="Enter"></KeyBinding>
                    <KeyBinding Command="Backspace" Key="Left"></KeyBinding>
                    <KeyBinding Command="Open" Key="Right"></KeyBinding>
                    <KeyBinding Command="Backspace" Key="Back"></KeyBinding>
                </ListView.InputBindings>
                <ListView.ContextMenu>
                    <ContextMenu x:Name="MainLvContextMenu">
                        <MenuItem Header="{DynamicResource MwMainLvContextMenuOpen}" Command="Open">
                        </MenuItem>
                        <MenuItem Header="{DynamicResource MwMainLvContextMenuShowInExplorer}" Command="local:Commands.ShowInExplorer"/>
                        <Separator />
                        <MenuItem Header="{DynamicResource MwMainLvContextMenuRename}" Command="local:Commands.Rename"></MenuItem>
                        <Separator />
                        <MenuItem Header="{DynamicResource MwMainLvContextMenuCopyTo}" Command="local:Commands.CopyTo"></MenuItem>
                        <Separator />
                        <MenuItem Header="{DynamicResource MwMainLvContextMenuCreateHeader}">
                            <MenuItem Header="{DynamicResource MwMainLvContextMenuCreateDir}">
                                <MenuItem x:Name="CreateDirHereMenuItem" Header="{DynamicResource MwMainLvContextMenuCreateDirHere}" Command="local:Commands.CreateDirectory"
                                          CommandParameter="0"></MenuItem>
                                <MenuItem x:Name="CreateDirInsideMenuItem" Header="{DynamicResource MwMainLvContextMenuCreateDirInside}" Command="local:Commands.CreateDirectory"
                                          CommandParameter="1">
                                </MenuItem>
                            </MenuItem>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="{DynamicResource MwMainLvContextMenuRemove}" Command="local:Commands.Remove"></MenuItem>
                        <Separator />
                        <MenuItem Header="{DynamicResource MwMainLvContextMenuProperties}" Command="local:Commands.PropertiesDialog"></MenuItem>
                    </ContextMenu>
                </ListView.ContextMenu>
            </ListView>
            <Popup Name="SearchPopup" StaysOpen="False" PopupAnimation="Slide" Placement="Center" AllowsTransparency="True"
                   MouseEnter="Popup_OnMouseEnter" MouseLeftButtonUp="PopupLeftMouseButtonUp">
                <Border BorderBrush="DarkBlue" BorderThickness="2" Background="White">
                    <StackPanel Margin="5">
                        <TextBlock Margin="5" FontFamily="{StaticResource FontAwesome}"  HorizontalAlignment="Center" Text="{DynamicResource MwSearchPopupFirstTextBlock}"></TextBlock>
                        <TextBlock Margin="5" FontFamily="{StaticResource FontAwesome}"  HorizontalAlignment="Center">
                            <Run Text="{DynamicResource MwSearchPopupSecondTextBlock}"></Run>
                            <Run FontWeight="Bold" Text="{DynamicResource MwSearchPopupSecondTextBlockBoldPart}"></Run>
                        </TextBlock>
                    </StackPanel>
                </Border>
            </Popup>
            <Popup Name="ErrorPopup" StaysOpen="False" PopupAnimation="Slide" Placement="Center" AllowsTransparency="True"
                   MouseEnter="Popup_OnMouseEnter" MouseLeftButtonUp="PopupLeftMouseButtonUp">
                <Border BorderBrush="DarkRed" BorderThickness="2" Background="White">
                    <StackPanel Margin="5">
                        <TextBlock Margin="5" FontFamily="{StaticResource FontAwesome}"  HorizontalAlignment="Center" Text="{DynamicResource MwErrorPopupTextBlock}"></TextBlock>
                    </StackPanel>
                </Border>
            </Popup>
            <Popup Name="CustomErrorPopup" StaysOpen="False" PopupAnimation="Slide" Placement="Center" AllowsTransparency="True"
                   MouseEnter="Popup_OnMouseEnter" MouseLeftButtonUp="PopupLeftMouseButtonUp">
                <Border BorderBrush="Blue" BorderThickness="2" Background="White">
                    <StackPanel Margin="5">
                        <TextBlock Margin="5" FontFamily="{StaticResource FontAwesome}"  HorizontalAlignment="Center" Text="{DynamicResource MwCustomErrorPopupFirstTextBlock}"></TextBlock>
                        <TextBlock Name="CustomErrorPopupTextBlock" FontFamily="{StaticResource FontAwesome}"  HorizontalAlignment="Center"></TextBlock>
                    </StackPanel>
                </Border>
            </Popup>
        </Grid>

        <Grid Grid.Row="3">
            <DockPanel>
                <ProgressBar Name="PbVisualization" IsIndeterminate="True" Visibility="Hidden" Height="18"></ProgressBar>
            </DockPanel>
        </Grid>
    </Grid>
</Window>
